components:
    schemas:
        Address:
            description:
                Contains all of the data for a single address.
            properties:
                id:
                    description:
                        The address internal ID.
                    format: int64
                    type: integer
                name:
                    description:
                        The address name.
                    type: string
            type: object
        Department:
            description:
                Contains all of the data for a single department.
            properties:
                id:
                    description:
                        The department internal ID.
                    format: int64
                    type: integer
                name:
                    description:
                        The department name.
                    type: string
            type: object
        Part:
            description:
                Contains all of the data for a single part.
            properties:
                address:
                    $ref: "#/components/schemas/Address"
                id:
                    description:
                        The part internal ID.
                    format: int64
                    type: integer
                internalPhone:
                    description:
                        The part internal phone.
                    type: string
                name:
                    description:
                        The part name.
                    type: string
            type: object
        Person:
            description:
                Contains all of the data for a single person.
            properties:
                department:
                    $ref: "#/components/schemas/Department"
                email:
                    description:
                        The person email.
                    type: string
                faxNumber:
                    description:
                        The person fax number.
                    type: string
                firstName:
                    description:
                        The person first name.
                    type: string
                id:
                    description:
                        The person internal ID.
                    format: int64
                    type: integer
                lastName:
                    description:
                        The person last name.
                    type: string
                localPhoneNumber:
                    description:
                        The person local phone number.
                    type: string
                phoneNumber:
                    description:
                        The person phone number.
                    type: string
                role:
                    $ref: "#/components/schemas/Role"
                roomNumber:
                    description:
                        The person room number.
                    type: string
                website:
                    description:
                        The person website.
                    type: string
        Role:
            description:
                Contains all of the data for a single role.
            properties:
                id:
                    description:
                        The role internal ID.
                    format: int64
                    type: integer
                name:
                    description:
                        The role name.
                    type: string
            # department:
            # $ref: "#/components/schemas/Department"
            type: object
info:
    description:
        "HeadlessPhoneBook REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "HeadlessPhoneBook"
    version: v1.0
openapi: 3.0.1
paths:
    "/addresses/{addressId}":
        patch:
            description:
                Replaces the address with the information sent in the request body. Any missing fields are deleted,
                unless they are required.
            operationId: patchAddress
            parameters:
                - in: path
                  name: addressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Address"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Address"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Address"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Address"
                    description:
                        desc
            tags:
                - Address
        put:
            description:
                Replaces the address with the information sent in the request body. Any missing fields are deleted,
                unless they are required.
            operationId: putAddress
            parameters:
                - in: path
                  name: addressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Address"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Address"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Address"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Address"
                    description:
                        Default Response
            tags:
                - Address
        get:
            description:
                Retrieves the address via its ID.
            operationId: getAddressApi
            parameters:
                - in: path
                  name: addressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Address"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Address"
                    description:
                        desc
            tags:
                - Address
    "/departments/{departmentId}":
        patch:
            description:
                Replaces the department with the information sent in the request body. Any missing fields are deleted,
                unless they are required.
            operationId: patchDepartment
            parameters:
                - in: path
                  name: departmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Department"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Department"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
                    description:
                        desc
            tags: ["Department"]
        put:
            description:
                Replaces the department with the information sent in the request body. Any missing fields are deleted,
                unless they are required.
            operationId: putDepartment
            parameters:
                - in: path
                  name: departmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Department"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Department"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
                    description:
                        Default Response
            tags: ["Department"]
    "/parts/{partId}":
        patch:
            description:
                Replaces the part with the information sent in the request body. Any missing fields are deleted, unless
                they are required.
            operationId: patchPartApi
            parameters:
                - in: path
                  name: partId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: addressId
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Part"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Part"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Part"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Part"
                    description:
                        desc
            tags: ["Part"]
        put:
            description:
                Replaces the part with the information sent in the request body. Any missing fields are deleted, unless
                they are required.
            operationId: putPartApi
            parameters:
                - in: path
                  name: partId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: addressId
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Part"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Part"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Part"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Part"
                    description:
                        Default Response
            tags: ["Part"]
    "/persons/{personId}":
        get:
            description:
                Retrieves the person via its ID.
            operationId: getPerson
            parameters:
                - in: path
                  name: personId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Person"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Person"
                    description:
                        desc
            tags: ["Person"]
        patch:
            description:
                Replaces the person with the information sent in the request body. Any missing fields are deleted,
                unless they are required.
            operationId: patchPersonApi
            parameters:
                - in: path
                  name: personId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: departmentId
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: roleId
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Person"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Person"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Person"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Person"
                    description:
                        desc
            tags: ["Person"]
        put:
            description:
                Replaces the person with the information sent in the request body. Any missing fields are deleted,
                unless they are required.
            operationId: putPersonApi
            parameters:
                - in: path
                  name: personId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: departmentId
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: roleId
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Person"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Person"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Person"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Person"
                    description:
                        Default Response
            tags: ["Person"]
    "/roles/{roleId}":
        patch:
            description:
                Replaces the role with the information sent in the request body. Any missing fields are deleted, unless
                they are required.
            operationId: patchRole
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Role"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Role"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Role"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Role"
                    description:
                        desc
            tags: ["Role"]
        put:
            description:
                Replaces the role with the information sent in the request body. Any missing fields are deleted, unless
                they are required.
            operationId: putRole
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Role"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Role"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Role"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Role"
                    description:
                        Default Response
            tags: ["Role"]
    "/sites/{siteId}/addresses":
        get:
            description:
                Retrieves the list of addresses. Results can be paginated, filtered, searched, and sorted.
            operationId: getAddressesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Address"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Address"
                                type: array
                    description:
                        desc
            tags: ["Address"]
        post:
            description:
                Create a new address.
            operationId: postAddress
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Address"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Address"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Address"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Address"
                    description:
                        desc
            tags: ["Address"]
    "/sites/{siteId}/addresses/{addressId}":
        delete:
            description:
                Deletes the address and returns a 204 if the operation succeeds.
            operationId: deleteAddressApi
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: addressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Address"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Address"
                    description:
                        "Address successfully delete"
            tags:
                - Address
    "/sites/{siteId}/departments":
        get:
            description:
                Retrieves the list of departments. Results can be paginated, filtered, searched, and sorted.
            operationId: getDepartmentsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Department"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Department"
                                type: array
                    description:
                        desc
            tags: ["Department"]
        post:
            description:
                Create a new department.
            operationId: postDepartment
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Department"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Department"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
                    description:
                        desc
            tags: ["Department"]
    "/sites/{siteId}/departments/{departmentId}":
        delete:
            description:
                Deletes the department and returns a 204 if the operation succeeds.
            operationId: deleteDepartmentApi
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: departmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        desc
            tags: ["Department"]
        get:
            description:
                Retrieves the department via its ID.
            operationId: getDepartmentApi
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: departmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Department"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Department"
                    description:
                        desc
            tags: ["Department"]
    "/sites/{siteId}/excel":
        get:
            description:
                Retrieves all Persons to excel
            operationId: getPersonsExcel
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  required: false
                  schema:
                      type: string
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/octet-stream:
                            schema:
                                format: binary
                                type: string
                    description:
                        ""
            tags: ["Person"]
        post:
            description:
                Create Person from excel
            operationId: postPersonExcel
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        "excel file successfully imported"
            tags: ["Person"]
    "/sites/{siteId}/parts":
        get:
            description:
                Retrieves the list of parts. Results can be paginated, filtered, searched, and sorted.
            operationId: getPartsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Part"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Part"
                                type: array
                    description:
                        desc
            tags: ["Part"]
        post:
            description:
                Create a new part.
            operationId: postPart
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: addressId
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Part"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Part"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Part"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Part"
                    description:
                        desc
            tags: ["Part"]
    "/sites/{siteId}/parts/{partId}":
        delete:
            description:
                Deletes the part and returns a 204 if the operation succeeds.
            operationId: deletePartApi
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: partId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        desc
            tags: ["Part"]
        get:
            description:
                Retrieves the part via its ID.
            operationId: getPart
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: partId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Part"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Part"
                    description:
                        desc
            tags: ["Part"]
    "/sites/{siteId}/persons":
        get:
            description:
                Retrieves the list of persons. Results can be paginated, filtered, searched, and sorted.
            operationId: getPersonsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Person"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Person"
                                type: array
                    description:
                        desc
            tags: ["Person"]
        post:
            description:
                Create a new person.
            operationId: postPerson
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: departmentId
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: roleId
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Person"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Person"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Person"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Person"
                    description:
                        desc
            tags: ["Person"]
    "/sites/{siteId}/persons/{personId}":
        delete:
            description:
                Deletes the person and returns a 204 if the operation succeeds.
            operationId: deletePersonApi
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: personId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Person"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Person"
                    description:
                        "Person successfully delete"
            tags: ["Person"]
    "/sites/{siteId}/roles":
        get:
            description:
                Retrieves the list of roles. Results can be paginated, filtered, searched, and sorted.
            operationId: getRolesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Role"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Role"
                                type: array
                    description:
                        desc
            tags: ["Role"]
        post:
            description:
                Create a new role.
            operationId: postRole
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Role"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Role"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Role"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Role"
                    description:
                        desc
            tags: ["Role"]
    "/sites/{siteId}/roles/{roleId}":
        delete:
            description:
                Deletes the role and returns a 204 if the operation succeeds.
            operationId: deleteRoleApi
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        desc
            tags: ["Role"]
        get:
            description:
                Retrieves the role via its ID.
            operationId: getRoleApi
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Role"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Role"
                    description:
                        desc
            tags: ["Role"]